1.Shape


import java.util.Scanner;

public class test{
	
   public static void main(String[] args){
	   
	   Scanner sc = new Scanner(System.in);
			  
	   System.out.println("Enter the Shape");
	   
	   String shape = sc.nextLine();
	   
	   int radius,length;
	   

	   if(shape == "Circle") {
		   
		   System.out.println("Enter the Radius");
		   
		   radius = sc.nextInt();
		   
		   Shape c = new Circle(radius);
		   
		   System.out.println("Circle Area is " + c.calculateArea());
		   
		   }
	   
	   else {
		   
		   System.out.println("Enter the dimensions");
		
		   length = sc.nextInt();
		
		   Shape s = new Square(length);

		   System.out.println("Square Area is " + s.calculateArea());
	   }
	   

	   
  }
}


abstract public class Shape {
	
	   // Private member variable
	   protected int value;
	   
	
	   
	  abstract public double calculateArea();
	}

public class Circle extends Shape{
	
	   // private instance variables
	   private double radius;

	
	   public Circle(double radius) {
	      this.radius = radius;
	      System.out.println("Construced a Circle with Circle(radius)");  // for debugging
	   }
	  
	   // public getters and setters for the private variables
	   public double getRadius() {
	      return this.radius;
	   }
	   
	   public void setRadius(double radius) {
	      this.radius = radius;
	   }
	  

	 
 public double calculateArea() {
	
	 return radius * radius * Math.PI;
		
	}

}


public class Square extends Shape{
	
	private int l;
	
	public Square(int l) {
		
		this.l = l;
		
		
	}
	
	//setter
	
	public void setDimensions(int l) {
		
		this.l = l;

	  
	}
	  
	//getter
	
	public int getLength() {
		
		return this.l;
	}

	public double calculateArea() {
		
		 return l*l;
			
		}

}
 
 




2. Match

package test;

import java.io.*;

import java.util.*;

public class test{

	
	    public static void main(String[] args){
	    	
	    	Scanner sc = new Scanner(System.in);
	    	
	        System.out.println("Enter the match format");
	    	
	        float b,r;
	    	int choice = sc.nextInt();
	    	
	    	switch(choice){
	    	
	    	case 1: Match O = new ODIMatch();
	    	        O.getInput();
	    	        b =  O.calculateBalls();
	    	        r =  O.calculateRunRate();
	    	        break;
	    	case 2: Match TT = new T20Match();
	    	        TT.getInput();
	                b =  TT.calculateBalls();
	                r =  TT.calculateRunRate();
	    		    break;
	    	case 3: Match T = new TestMatch();
	    	        T.getInput();
	                b =  T.calculateBalls();
	                r =  T.calculateRunRate();
	    		    break;
	    		
	    	default: System.out.println("ERROR in choice");
	    	         System.exit(0);
	    	
	    	}
	  
	}
}
Match.java
package test;


abstract public class Match {
	
	//Data members
	protected int currentscore;
	protected float currentover;
	protected int target;
    protected float runRate;
    public static  int choice;
    
    

	//methods
	
	abstract float calculateRunRate();
    abstract int calculateBalls();
	abstract void getInput();
	
}
ODIMatch.java
package test;

import java.io.*;
import java.util.Scanner;

public class ODIMatch extends Match {
	
	public int runs,balls;
	final int ODI_MAX = 50;
	
	Scanner sc = new Scanner(System.in);
	
       void getInput() {
		
		System.out.println("Enter current score: ");
 	    this.currentscore = sc.nextInt();
        
 	    System.out.println("Enter current over: ");
        this.currentover = sc.nextInt();
        
        System.out.println("Enter Target Score");
        this.target = sc.nextInt();
		
	}
	
	int calculateBalls() {
    	
    	balls = (int) (ODI_MAX - currentover);
    	runs = target - currentscore;
    	
    	return balls;
		
	}
      float calculateRunRate() {
    	  
    	  runRate=runs/balls;
          
    	  System.out.println("Need "+runs+" runs in "+balls+ balls);
    	  System.out.println("Required Run Rate: "+runRate);
		  
          return runRate;
	}
	
       
}
 TestMatch.java
  package test;

import java.io.*;
import java.util.Scanner;


public class TestMatch extends Match{

	public int runs,balls;
	final int TEST_MAX = 90;
	
	Scanner sc = new Scanner(System.in);


	int calculateBalls() {
    	
    	balls = (int) (TEST_MAX - currentover);
    	runs = target - currentscore;
    	
    	return balls;
		
	}
      float calculateRunRate() {
    	  
    	  runRate=runs/balls;
          
    	  System.out.println("Need "+runs+" runs in "+balls+ balls);
    	  System.out.println("Required Run Rate: "+runRate);
		  
          return runRate;
	}
	
    
	
       void getInput() {
		
		System.out.println("Enter current score: ");
 	    this.currentscore = sc.nextInt();
        
 	    System.out.println("Enter current over: ");
        this.currentover = sc.nextInt();
        
        System.out.println("Enter Target Score");
        this.target = sc.nextInt();
		
	}
}
 T20Match.java
 package test;

import java.util.Scanner;

public class T20Match extends Match {


	public int runs,balls;
	final int TEST_MAX = 20;
	
	Scanner sc = new Scanner(System.in);


	int calculateBalls() {
    	
    	balls = (int) (TEST_MAX - currentover);
    	runs = target - currentscore;
    	
    	return balls;
		
	}
      float calculateRunRate() {
    	  
    	  runRate=runs/balls;
          
    	  System.out.println("Need "+runs+" runs in "+balls+ balls);
    	  System.out.println("Required Run Rate: "+runRate);
		  
          return runRate;
	}
	
    
	
       void getInput() {
		
		System.out.println("Enter current score: ");
 	    this.currentscore = sc.nextInt();
        
 	    System.out.println("Enter current over: ");
        this.currentover = sc.nextInt();
        
        System.out.println("Enter Target Score");
        this.target = sc.nextInt();
		
	}
}
